name: Daily Data Core
'on':
  schedule:
  - cron: '*/30 * * * *'
  workflow_dispatch: null
env:
  DESTINATION__FILESYSTEM__BUCKET_URL: s3://prod/base/
  DESTINATION__FILESYSTEM__CREDENTIALS__ENDPOINT_URL: ${{secrets.FILESYSTEM_ENDPOINT_URL }}
  DESTINATION__FILESYSTEM__CREDENTIALS__AWS_ACCESS_KEY_ID: ${{secrets.FILESYSTEM_AWS_ACCESS_KEY_ID }}
  DESTINATION__FILESYSTEM__CREDENTIALS__AWS_SECRET_ACCESS_KEY: ${{secrets.FILESYSTEM_AWS_SECRET_ACCESS_KEY }}
  DESTINATION__FILESYSTEM__CREDENTIALS__REGION_NAME: eu-west-1
  DESTINATION__FILESYSTEM__KWARGS__USE_SSL: false

  # GitHub API source configuration
  SOURCES__GITHUB_API__ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}

  # Home Assistant source configuration - using simpler env var names that dlt looks for
  SOURCES__HOME_ASSISTANT_HOST: ${{ secrets.HOME_ASSISTANT_HOST }}
  SOURCES__HOME_ASSISTANT_PORT: ${{ secrets.HOME_ASSISTANT_PORT }}
  SOURCES__HOME_ASSISTANT_TOKEN: ${{ secrets.HOME_ASSISTANT_TOKEN }}

jobs:
  
  maybe_skip_github_api_pipeline:
    runs-on: [self-hosted, linux, docker]
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
    - id: skip_check
      uses: fkirc/skip-duplicate-actions@v5
      with:
        concurrent_skipping: always
        skip_after_successful_duplicate: 'false'
        do_not_skip: '[]'

  run_github_api_pipeline:
    needs: maybe_skip_github_api_pipeline
    if: needs.maybe_skip_github_api_pipeline.outputs.should_skip != 'true'
    runs-on: [self-hosted, linux, docker]
    steps:
    - name: Check out
      uses: actions/checkout@v3
    - name: Setup uv
      uses: astral-sh/setup-uv@v6
      with:
        enable-cache: true
        cache-dependency-glob: "dlt_project/uv.lock"
    - name: Setup Python with uv
      run: |
        cd dlt_project
        uv python install 3.12
    - name: Install dependencies
      run: |
        cd dlt_project
        uv sync --frozen
    - name: Run pipeline script
      run: |
        cd dlt_project
        uv run sources/github_api_pipeline.py

  maybe_skip_home_assistant_pipeline:
    runs-on: [self-hosted, linux, docker]
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
    - id: skip_check
      uses: fkirc/skip-duplicate-actions@v5
      with:
        concurrent_skipping: always
        skip_after_successful_duplicate: 'false'
        do_not_skip: '[]'

  run_home_assistant_pipeline:
    needs: maybe_skip_home_assistant_pipeline
    if: needs.maybe_skip_home_assistant_pipeline.outputs.should_skip != 'true'
    runs-on: [self-hosted, linux, docker]
    steps:
    - name: Check out
      uses: actions/checkout@v3
    - name: Setup uv
      uses: astral-sh/setup-uv@v6
      with:
        enable-cache: true
        cache-dependency-glob: "dlt_project/uv.lock"
    - name: Setup Python with uv
      run: |
        cd dlt_project
        uv python install 3.12
    - name: Install dependencies
      run: |
        cd dlt_project
        uv sync --frozen
    - name: Run pipeline script
      run: |
        cd dlt_project
        uv run sources/home_assistant.py